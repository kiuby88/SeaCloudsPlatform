tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

imports:
  - tosca-normative-types:1.0.0.wd06-SNAPSHOT
  - seaclouds-types:0.8.0-SNAPSHOT


template_name: web-chat.tomcat-compute.mysql-compute.na
template_version: 1.0.0-SNAPSHOT

description: Web chat using tomcat. No artifacts. All compontent are hosted


node_types:
  org.apache.brooklyn.entity.database.mysql.MySqlCluster:
    derived_from: tosca.nodes.Root
    description: |
      A MySQL server
    properties:
      datastore.master.creation.script.url:
        type: string
        required: false
    capabilities:
      dbConnection: tosca.capabilities.Endpoint.Database

topology_template:
  description: Web Server Sample with Script
  node_templates:
    tomcat_server:
      type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
      properties:
        http.port: "8080+"
        wars.root: "http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-sql-webapp/0.6.0/brooklyn-example-hello-world-sql-webapp-0.6.0.war"
        java.sysprops:
          brooklyn.example.db.url: $brooklyn:formatString("jdbc:%s%s?user=%s&password=%s", component("db").attributeWhenReady("datastore.url"), "visitors", "brooklyn", "br00k11n")
      requirements:
      - host: Amazon_EC2_i2_xlarge_us_west_2

    db:
      type: org.apache.brooklyn.entity.database.mysql.MySqlCluster
      properties:
        datastore.master.creation.script.url: "https://raw.githubusercontent.com/apache/incubator-brooklyn/master/brooklyn-server/launcher/src/test/resources/visitors-creation-script.sql"

    Amazon_EC2_i2_xlarge_us_west_2:
      type: tosca.nodes.Compute
      properties:
        resource_type: compute
        hardwareId: i2.xlarge
        location: aws-ec2
        region: us-west-2
        performance: 90
        availability: 0.9995
        country: United States
        city: SAN JOSE
        cost: 1.001 USD/hour
        disk_size: 800
        num_disks: 1
        num_cpus: 4
        ram: 30.5
        disk_type: ssd


  # if you want to tell brooklyn to assign a location at deploy time, as part of the template, this is the current way.
  # it can also be done with camp, referencing this topology template.
  groups:
    add_brooklyn_location-tomcat:
      members: [ Amazon_EC2_i2_xlarge_us_west_2 ]
      policies:
      - brooklyn.location: aws-ec2:us-west-2

    add_brooklyn_location-db:
      members: [ db ]
      policies:
      - brooklyn.location: aws-ec2:us-west-2
      - autoscaling:
          type: org.apache.brooklyn.policy.autoscaling.AutoScalerPolicy
          metric: $brooklyn:sensor("org.apache.brooklyn.entity.database.mysql.MySqlCluster", "mysql.queries.perSec.fromMysql.perNode")
          autoscaler.resizeDownStabilizationDelay: 100000
          metricLowerBound: 0.40
          metricUpperBound: 0.41
          minPoolSize: 1
          maxPoolSize: 2